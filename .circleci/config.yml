version: 2.1

orbs:
  android: circleci/android@0.2.1

jobs:
  build:
    environment:
      JVM_OPTS: -Xmx3200m

    steps:
      - run:
          name: Setup Environment
          command: |
            gpg --passphrase $GPG_KEY --pinentry-mode loopback --output "app/google-services.json" --decrypt "app/google-services.json.gpg"
            gpg --passphrase $GPG_KEY --pinentry-mode loopback --output "upload-keystore.jks" --decrypt "upload-keystore.jks.gpg"
            gpg --passphrase $GPG_KEY --pinentry-mode loopback --output "publish-key.json" --decrypt "publish-key.json.gpg"
      - restore_cache:
          key: dependency-cache-{{ checksum "build.gradle.kts" }}-{{ checksum "app/build.gradle.kts" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          key: dependency-cache-{{ checksum "build.gradle.kts" }}-{{ checksum "app/build.gradle.kts" }}
          paths:
            - ~/.android/build-cache
            - ~/.android/cache
            - ~/.gradle
      - run:
          name: Run Tests
          command: ./gradlew check --stacktrace
      - run:
          name: Build Release Bundle
          command: ./gradlew bundleRelease --stacktrace
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results

  deploy:
    executor:
      name: android

    steps:
      - checkout
      - accept-licenses
      - run:
          name: Setup Environment
          command: |
            gpg --passphrase $GPG_KEY --pinentry-mode loopback --output "app/google-services.json" --decrypt "app/google-services.json.gpg"
            gpg --passphrase $GPG_KEY --pinentry-mode loopback --output "upload-keystore.jks" --decrypt "upload-keystore.jks.gpg"
            gpg --passphrase $GPG_KEY --pinentry-mode loopback --output "publish-key.json" --decrypt "publish-key.json.gpg"
      - restore_cache:
          key: dependency-cache-{{ checksum "build.gradle.kts" }}-{{ checksum "app/build.gradle.kts" }}
      - run:
          name: Upload to Google Play
          command: ./gradlew publishBundle --stacktrace

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
